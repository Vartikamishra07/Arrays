1. Brute approach

class Solution 
{
public:
    bool containsDuplicate(vector<int>& nums) 
    {
       for(int i=0;i<nums.size();i++)
       {
         for(int j=i+1;j<nums.size();j++)
         {
            if(nums[i]==nums[j])
            {
                return true;
            }
         }
       }
       return false;
    }
};


2. Better approach

class Solution 
{
public:
    bool containsDuplicate(vector<int>& nums) 
    {
       sort(nums.begin() , nums.end());
       for(int i=1;i<nums.size();i++)
       {
        if(nums[i]==nums[i-1])
        {
            return true;
        }
       }
       return false;
    }
};

3. Optimal approach

class Solution 
{
public:
    bool containsDuplicate(vector<int>& nums) 
    {
        unordered_map<int,int>mp;
        for(int a:nums)
        {
            mp[a]++;
        }
        for(auto p:mp)
        {
            if(p.second>=2)
            {
                return true;
            }
        }
        return false;
    }
};
