1.Brute appraoch

#include <bits/stdc++.h>

class Solution 
{
public:
    int maxProfit(vector<int>& prices) 
    {
         int n=prices.size();
         int maxProfit=0;
         for(int i=0;i<n;i++)
         {
            for(int j=i+1;j<n;j++)
            {
                if(prices[j]>prices[i])
                {
                   maxProfit=max(prices[j]-prices[i] , maxProfit);
                 }
         }
         return maxProfit;
    }
};

2.Optimal approach

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int min_price = prices[0];
        int maxprof = 0;

        for(int i=1;i<prices.size();i++){
            maxprof = max(maxprof,prices[i]-min_price);
            min_price = min(prices[i],min_price);
        }

        return maxprof;
    }
};

